{{define "base"}}
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0 shrink-to-fit=no">
    
    <title>My nice page</title>

    <link 
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.0-beta1/dist/css/bootstrap.min.css" 
      rel="stylesheet" 
      integrity="sha384-0evHe/X+R7YkIZDRvuzKMRqM+OrBnVFBL6DOitfPri4tjfHxaWutUpFmBp4vmVor" 
      crossorigin="anonymous">
    
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/vanillajs-datepicker@1.2.0/dist/css/datepicker-bs5.min.css">
    <link rel="stylesheet" type="text/css" href="https://unpkg.com/notie/dist/notie.min.css">
    <link rel="stylesheet" type="text/css" href="/static/css/styles.css">
  </head>

  <body>

    
    <nav class="navbar navbar-expand-lg navbar-dark bg-dark">
      <div class="container-fluid">
        <a class="navbar-brand" href="#">Navbar</a>
        <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
          <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="navbarSupportedContent">
          <ul class="navbar-nav me-auto mb-2 mb-lg-0">
            <li class="nav-item">
              <a class="nav-link active" aria-current="page" href="/">Home</a>
            </li>
            <li class="nav-item">
              <a class="nav-link" href="/about">About</a>
            </li>
            <li class="nav-item dropdown">
              <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                Rooms
              </a>
              <ul class="dropdown-menu" aria-labelledby="navbarDropdown">
                <li><a class="dropdown-item" href="/generals-quarters">General's Quarters</a></li>
                <li><a class="dropdown-item" href="/majors-suite">Major's Quarters</a></li>
              </ul>
            </li>
            <li class="nav-item">
              <a class="nav-link" href="/search-availability">Book Now</a>
            </li>
            <li class="nav-item">
              <a class="nav-link" href="/contact">Contact</a>
            </li>
          </ul>

        </div>
      </div>
    </nav>

      {{block "content" .}}
      
      {{end}}
      
      <div class="row my-footer">
        <div class="col">Left</div>
        <div class="col">Middle</div>
        <div class="col">Right</div>
      </div>
      
  
      <script 
        src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.5/dist/umd/popper.min.js" 
        integrity="sha384-Xe+8cL9oJa6tN/veChSP7q+mnSPaj5Bcu9mPX5F5xIGE0DVittaqT5lorf0EI7Vk" 
        crossorigin="anonymous">
      </script>
      <script 
        src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.0-beta1/dist/js/bootstrap.min.js" 
        integrity="sha384-kjU+l4N0Yf4ZOJErLsIcvOU2qSb74wXpOhqTvwVx3OElZRweTnQ6d31fXEoRD1Jy" 
        crossorigin="anonymous">
      </script>
      <script src="https://cdn.jsdelivr.net/npm/vanillajs-datepicker@1.2.0/dist/js/datepicker-full.min.js"></script>
      <script src="https://unpkg.com/notie"></script>
      <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

      {{block "js" .}}

      {{end}}
  
      <script>
  
        let attention = Prompt(); 
        
        // Example starter JavaScript for disabling form submissions if there are invalid fields
        (() => {
          'use strict'
  
          // Fetch all the forms we want to apply custom Bootstrap validation styles to
          const forms = document.querySelectorAll('.needs-validation')
  
          // Loop over them and prevent submission
          Array.from(forms).forEach(form => {
            form.addEventListener('submit', event => {
              if (!form.checkValidity()) {
                event.preventDefault()
                event.stopPropagation()
              }
  
              form.classList.add('was-validated')
            }, false)
          })
        })()
  
        function notify(msg, type){
          notie.alert({
          type: type, // optional, default = 4, enum: [1, 2, 3, 4, 5, 'success', 'warning', 'error', 'info', 'neutral']
          text: msg,
        })
        }
  
        // Code for lose button on the page
        // document.getElementById("colorButton").addEventListener("click", function(){
  
        //   let html = `
        //     <form id="check-avilability-form" action="" method="post" class="needs-validation" novalidate>
        //       <div class="form row" id="reservation-dates-modal">
        //         <div class="col">
        //           <input disabled required class="form-control" name="start2" id="start2" placeholder="Arrival">
        //         </div>
        //         <div class="col">
        //           <input disabled required class="form-control" name="end2" id="end2" placeholder="Departure">
        //         </div>
        //       </div>
        //     </form>
        //   `;
  
        //   // notifyModal("Avaaas!", "Me hearties! There be land yonder.", "error", "Aye aye, Captn!")
        //   // attention.toast({msg: "Hello world!"});
        //   attention.custom({msg: html,title: "Choose your dates",});
        // })
  
        // notify("msg", "neutral")
        function notifyModal(title, text, error, confirmButtonText){
          Swal.fire({
            title: title,
            text: text,
            icon: error,
            confirmButtonText: confirmButtonText
          })
        }
  
        
  
        function Prompt(){
          let toast = function(c){
            const {
              msg = "",
              icon = "success",
              position = "top-end",
              title = "Saved!",
              footer = "<a href=\"\">Why do I have this issue?</a>",
            } = c;
  
            const Toast = Swal.mixin({
              toast: true,
              title: msg,
              icon: icon,
              position: position,
              showConfirmButton: false,
              timer: 3000,
              timerProgressBar: true,
              didOpen: (toast) => {
                toast.addEventListener('mouseenter', Swal.stopTimer)
                toast.addEventListener('mouseleave', Swal.resumeTimer)
              }
            })
  
            Toast.fire({})
          }
  
          let success =function(c){
            const {
              text = "",
              title = "Saved!",
              footer = "<a href=\"\">Why do I have this issue?</a>",
            } = c;
            
            Swal.fire({
              icon: 'success',
              text: text,
              title: title,
              footer: footer,
            })
          }
          
          let error =function(c){
            const {
              text = "",
              title = "Saved!",
              footer = "",
            } = c;
            
            Swal.fire({
              icon: 'error',
              text: text,
              title: title,
              footer: footer,
            })
          }
  
          async function custom(c){
            const {
              msg = "",
              title = "Saved!",
            } = c;
  
            const { value: result } = await Swal.fire({
              title: title,
              html: msg,
              backdrop: false,
              focusConfirm: false,
              showCancelButton: true,
              willOpen: () => {
                const elem = document.getElementById('reservation-dates-modal');
                const rp = new DateRangePicker(elem, {
                  format: 'yyyy-mm-dd',
                  showOnFocus: true,
                })
              },
              preConfirm: () => {
                return [
                  document.getElementById('start2').value,
                  document.getElementById('end2').value
                ]
              },
              didOpen: () => {
                document.getElementById('start2').removeAttribute('disabled');
                document.getElementById('end2').removeAttribute('disabled');
              }
            })
  
            if (result){
              if (result.dismiss !== Sawl.DismissReason.cancel){
                if (result.value !== ""){
                  if
                }
              }
            }

          }
  
          return{
            toast: toast,
            success: success,
            error: error,
            custom: custom,
          }
        }
        
      </script>
    </body>
  </html>
{{end}}
